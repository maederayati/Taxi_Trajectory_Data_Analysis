for(j in 1:L){
s<-subset(destinations, (destinations[,1]==temp[j]))
lat_sum<-lat_sum+s[1,2]
long_sum<-long_sum+s[1,3]
}
prediction[[i]]<-c(lat_sum/L,long_sum/L)
}
else{
s<-subset(trTable2, (trTable2$obs==test[i]))
s2<-tail(s,1)
prediction[[i]]<-c(s2$lat,s2$long)
}
}
distance<-list()
for(i in 1:1921){
if(!is.null(prediction[[i]])){
if(!is.na(prediction[[i]][1])&!(is.na(prediction[[i]][2]))){
distance[[i]]<-distHaversine(prediction[[i]], realDestination[[i]])
}
}
}
d<-vector()
for( i in 1:length(distance)){
if(!is.null(distance[[i]])){
d<-c(d,distance[[i]])
}
}
meanOferror<-mean(d)/1000
result_rawDest<-c(result_rawDest,meanOferror)
print(prefixLength)
}
a<-1:50
result_rawDest_4plot<-cbind(a,result_rawDest)
save(result_rawDest_4plot, file="result_rawDest_4plot.RData")
#
#
# result<-as.data.frame(d)
# png("Graphs/error_level3.png")
# print(qplot(result, data=result, geom="histogram"))
#
# dev.off()
#
result_rawDest
result_rawDest<-vector()
for(prefixLength in 20:20){
z<-paste0("RData/levelThree_similarSets",as.character(prefixLength))
z<-paste0(z,".RData")
load(z)
prediction<-list()
for( i in 1:length(levelThree_similarSets)){
temp<-levelThree_similarSets[[i]]
L<-length(temp)
if(L>0){
lat_sum<-0
long_sum<-0
for(j in 1:L){
s<-subset(destinations, (destinations[,1]==temp[j]))
lat_sum<-lat_sum+s[1,2]
long_sum<-long_sum+s[1,3]
}
prediction[[i]]<-c(lat_sum/L,long_sum/L)
}
else{
s<-subset(trTable2, (trTable2$obs==test[i]))
s2<-tail(s,1)
prediction[[i]]<-c(s2$lat,s2$long)
}
}
distance<-list()
for(i in 1:length(levelThree_similarSets)){
if(!is.null(prediction[[i]])){
if(!is.na(prediction[[i]][1])&!(is.na(prediction[[i]][2]))){
distance[[i]]<-distHaversine(prediction[[i]], realDestination[[i]])
}
}
}
d<-vector()
for( i in 1:length(distance)){
if(!is.null(distance[[i]])){
d<-c(d,distance[[i]])
}
}
meanOferror<-mean(d)/1000
result_rawDest<-c(result_rawDest,meanOferror)
print(prefixLength)
}
a<-1:50
result_rawDest_4plot<-cbind(a,result_rawDest)
save(result_rawDest_4plot, file="result_rawDest_4plot.RData")
#
#
# result<-as.data.frame(d)
# png("Graphs/error_level3.png")
# print(qplot(result, data=result, geom="histogram"))
#
# dev.off()
#
result_rawDest
d
result_rawDest<-vector()
for(prefixLength in 20:20){
z<-paste0("RData/levelThree_similarSets",as.character(prefixLength))
z<-paste0(z,".RData")
load(z)
prediction<-list()
for( i in 1:length(levelThree_similarSets)){
temp<-levelThree_similarSets[[i]]
L<-length(temp)
if(L>0){
lat_sum<-0
long_sum<-0
for(j in 1:L){
s<-subset(destinations, (destinations[,1]==temp[j]))
lat_sum<-lat_sum+s[1,2]
long_sum<-long_sum+s[1,3]
}
prediction[[i]]<-c(lat_sum/L,long_sum/L)
}
else{
s<-subset(trTable2, (trTable2$obs==test[i]))
if(length(s)<=prefixLength){
s2<-tail(s,1)
prediction[[i]]<-c(s2$lat,s2$long)
}
else{
s2<-s[prefixLength,]
prediction[[i]]<-c(s2$lat,s2$long)
}
}
}
distance<-list()
for(i in 1:length(levelThree_similarSets)){
if(!is.null(prediction[[i]])){
if(!is.na(prediction[[i]][1])&!(is.na(prediction[[i]][2]))){
distance[[i]]<-distHaversine(prediction[[i]], realDestination[[i]])
}
}
}
d<-vector()
for( i in 1:length(distance)){
if(!is.null(distance[[i]])){
d<-c(d,distance[[i]])
}
}
meanOferror<-mean(d)/1000
result_rawDest<-c(result_rawDest,meanOferror)
print(prefixLength)
}
a<-1:50
result_rawDest_4plot<-cbind(a,result_rawDest)
save(result_rawDest_4plot, file="result_rawDest_4plot.RData")
#
#
# result<-as.data.frame(d)
# png("Graphs/error_level3.png")
# print(qplot(result, data=result, geom="histogram"))
#
# dev.off()
#
distance
d
test[i]
head(d)
head(l)
load("RData/test.RData")
load("RData/trTable2.RData")
l<-vector()
for(i in 1:length(test)){
s<-subset(trTable2,trTable2$obs==test[i])
m<-max(s$seg)
l<-c(l,m)
print(i)
}
head(l)
head(d)
head(l,20)
head(d,20)
prediction
subset(trTable2, (trTable2$obs==test[i]))
result_rawDest<-vector()
for(prefixLength in 20:20){
z<-paste0("RData/levelThree_similarSets",as.character(prefixLength))
z<-paste0(z,".RData")
load(z)
prediction<-list()
for( i in 1:length(levelThree_similarSets)){
temp<-levelThree_similarSets[[i]]
L<-length(temp)
if(L>0){
lat_sum<-0
long_sum<-0
for(j in 1:L){
s<-subset(destinations, (destinations[,1]==temp[j]))
lat_sum<-lat_sum+s[1,2]
long_sum<-long_sum+s[1,3]
}
prediction[[i]]<-c(lat_sum/L,long_sum/L)
}
else{
s<-subset(trTable2, (trTable2$obs==test[i]))
if(nrow(s)<=prefixLength){
s2<-tail(s,1)
prediction[[i]]<-c(s2$lat,s2$long)
}
else{
s2<-s[prefixLength,]
prediction[[i]]<-c(s2$lat,s2$long)
}
}
}
distance<-list()
for(i in 1:length(levelThree_similarSets)){
if(!is.null(prediction[[i]])){
if(!is.na(prediction[[i]][1])&!(is.na(prediction[[i]][2]))){
distance[[i]]<-distHaversine(prediction[[i]], realDestination[[i]])
}
}
}
d<-vector()
for( i in 1:length(distance)){
if(!is.null(distance[[i]])){
d<-c(d,distance[[i]])
}
}
meanOferror<-mean(d)/1000
result_rawDest<-c(result_rawDest,meanOferror)
print(prefixLength)
}
a<-1:50
result_rawDest_4plot<-cbind(a,result_rawDest)
save(result_rawDest_4plot, file="result_rawDest_4plot.RData")
#
#
# result<-as.data.frame(d)
# png("Graphs/error_level3.png")
# print(qplot(result, data=result, geom="histogram"))
#
# dev.off()
#
d
result_rawDest<-vector()
for(prefixLength in 1:50){
z<-paste0("RData/levelThree_similarSets",as.character(prefixLength))
z<-paste0(z,".RData")
load(z)
prediction<-list()
for( i in 1:length(levelThree_similarSets)){
temp<-levelThree_similarSets[[i]]
L<-length(temp)
if(L>0){
lat_sum<-0
long_sum<-0
for(j in 1:L){
s<-subset(destinations, (destinations[,1]==temp[j]))
lat_sum<-lat_sum+s[1,2]
long_sum<-long_sum+s[1,3]
}
prediction[[i]]<-c(lat_sum/L,long_sum/L)
}
else{
s<-subset(trTable2, (trTable2$obs==test[i]))
if(nrow(s)<=prefixLength){
s2<-tail(s,1)
prediction[[i]]<-c(s2$lat,s2$long)
}
else{
s2<-s[prefixLength,]
prediction[[i]]<-c(s2$lat,s2$long)
}
}
}
distance<-list()
for(i in 1:length(levelThree_similarSets)){
if(!is.null(prediction[[i]])){
if(!is.na(prediction[[i]][1])&!(is.na(prediction[[i]][2]))){
distance[[i]]<-distHaversine(prediction[[i]], realDestination[[i]])
}
}
}
d<-vector()
for( i in 1:length(distance)){
if(!is.null(distance[[i]])){
d<-c(d,distance[[i]])
}
}
meanOferror<-mean(d)/1000
result_rawDest<-c(result_rawDest,meanOferror)
print(prefixLength)
}
a<-1:50
result_rawDest_4plot<-cbind(a,result_rawDest)
save(result_rawDest_4plot, file="result_rawDest_4plot.RData")
#
#
# result<-as.data.frame(d)
# png("Graphs/error_level3.png")
# print(qplot(result, data=result, geom="histogram"))
#
# dev.off()
#
result_rawDest_4plot
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()
print(p)
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
load(result_rawDest_4plot.RData)
load("result_rawDest_4plot.RData")
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
dev.off()
library(ggplot2)
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
dev.off()
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15 - r=1km - no metadata",x="prefix length", y = "Error in KM")
print(p)
dev.off()
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="threshold=0.15   r=1km   no metadata",x="prefix length", y = "Error in KM")
print(p)
dev.off()
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="dissimilarity threshold=0.15   r=1km   no metadata",x="prefix length", y = "Error in KM")
print(p)
dev.off()
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("prefixLength", "errorInKm")
png("Graphs/Error_Vs_PrefixLength.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=prefixLength, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="dissimilarity threshold=0.15   r=1km  Average of predictions  no metadata",x="prefix length", y = "Error in KM")
print(p)
dev.off()
source('C:/drive/Myself/MastersProject/phase3-myApproach/onLength.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation.R')
se1(0.01,0.5)
seq(0.01,0.5)
?seq
seq(0.01,0.5, by=0.01)
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeThreshold.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeThreshold.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeThreshold.R')
load('RData/test.RData')
load('RData/trTable2.RData')
load('RData/destinations.RData')
library(geosphere)
library(ggplot2)
realDestination<-list()
L<-1921
for(i in 1:L){
realDestination[[i]]<-vector()
s1<-subset(trTable2, trTable2$obs==test[i])
L1<-nrow(s1)
s2<-subset(trTable2, (trTable2$obs==test[i]&trTable2$seg==L1))
realDestination[[i]]<-c(s2$lat,s2$long)
}
save(realDestination,file="RData/realDestination.RData")
save(realDestination,file="RData/realDestination.RData")
load(realDestination)
load("RData/realDestination.RData)
load("RData/realDestination.RData")
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeThreshold.R')
result_rawDest_4plot
result_rawDest_4plot<-as.data.frame(result_rawDest_4plot)
names(result_rawDest_4plot)<-c("threshold", "errorInKm")
png("Graphs/Error_Vs_threshold.png")
p<-ggplot(data=result_rawDest_4plot, aes(x=threshold, y=errorInKm)) +
geom_line()+
geom_point()+labs(title="Prefix Length=10   r=1km  Average of predictions  no metadata",x="threshold", y = "Error in KM")
print(p)
dev.off()
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3.R')
result_rawDest_4plot
source('C:/drive/Myself/MastersProject/phase3-myApproach/test_LevelTwoFilter_changeR.R')
r=1000
while(r<10001){
for(prefixLength in 10:10){
c<-paste0("RData/levelOne_similarSets",as.character(prefixLength))
c<-paste0(c,".RData")
e<-paste0("RData/levelOne_similarSets",as.character(prefixLength-1))
e<-paste0(e,".RData")
if(prefixLength>1){
rm(levelTwo_similarSets)
rm(levelOne_similarSets)
}
load(c)
L<-length(test)
levelTwo_similarSets<-list()
for(i in 1:L){
levelTwo_similarSets[[i]]<-vector()
L2<-length(levelOne_similarSets[[i]])
if(L2>0){
for( j in 1:L2){
if(distance(qi[levelOne_similarSets[[i]][j]],qi[test[i]])<r){
levelTwo_similarSets[[i]]<-c(levelTwo_similarSets[[i]], levelOne_similarSets[[i]][j])
}
}
}
}
d<-paste0("RData/levelTwo_similarSets",as.character(prefixLength))
d<-paste0(d,".RData")
d<-paste0("RData/levelTwo_similarSets",as.character(prefixLength))
d<-paste0(d,"_r")
d<-paste0(d,as.character(r/1000))
d<-paste0(d,"KM")
d<-paste0(d,".RData")
save(levelTwo_similarSets,file=d)
print(r)
}
r=r+1000
}
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/test_LevelThreeFilter_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeR.R')
result_rawDest_4plot
source('C:/drive/Myself/MastersProject/phase3-myApproach/test_LevelTwoFilter_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/test_LevelThreeFilter_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeR.R')
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/test_LevelTwoFilter_changeR.R')
d
getwd()
save(levelTwo_similarSets,file=d)
print(r)
while(r<1){
for(prefixLength in 10:10){
c<-paste0("RData/levelOne_similarSets",as.character(prefixLength))
c<-paste0(c,".RData")
e<-paste0("RData/levelOne_similarSets",as.character(prefixLength-1))
e<-paste0(e,".RData")
if(prefixLength>1){
rm(levelTwo_similarSets)
rm(levelOne_similarSets)
}
load(c)
L<-length(test)
levelTwo_similarSets<-list()
for(i in 1:L){
levelTwo_similarSets[[i]]<-vector()
L2<-length(levelOne_similarSets[[i]])
if(L2>0){
for( j in 1:L2){
if(distance(qi[levelOne_similarSets[[i]][j]],qi[test[i]])<=r){
levelTwo_similarSets[[i]]<-c(levelTwo_similarSets[[i]], levelOne_similarSets[[i]][j])
}
}
}
}
d<-paste0("RData/levelTwo_similarSets",as.character(prefixLength))
d<-paste0(d,".RData")
d<-paste0("RData/levelTwo_similarSets",as.character(prefixLength))
d<-paste0(d,"_r")
d<-paste0(d,as.character(r/1000))
d<-paste0(d,"KM")
d<-paste0(d,".RData")
save(levelTwo_similarSets,file=d)
print(r)
}
r=r+200
}
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/test_LevelThreeFilter_changeR.R')
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/test_LevelThreeFilter_changeR.R')
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/ApplyLevel3_Evaluation_changeR.R')
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeR.R')
source('C:/Users/marayati/Google Drive/Myself/MastersProject/phase3-myApproach/evaluation_level3_changeR.R')
